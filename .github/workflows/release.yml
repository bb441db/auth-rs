name: Release

on:
  push:
    branches:
      - main

jobs:
  check_version:
    runs-on: ubuntu-latest
    outputs:
      release_version: ${{ steps.extract_version.outputs.release_version }}
      change_log: ${{ steps.extract_version.outputs.change_log }}
      is_new_release: ${{ steps.check_tag.outputs.is_new_release }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fix this, don't fetch entire history just to find tags
      - name: Install git cliff
        env:
          GIT_CLIFF_VERSION: 2.9.1
        run: |
          wget "https://github.com/orhun/git-cliff/releases/download/v${GIT_CLIFF_VERSION}/git-cliff-${GIT_CLIFF_VERSION}-x86_64-unknown-linux-gnu.tar.gz"
          tar -xvzf git-cliff-*.tar.gz
          cp "git-cliff-${GIT_CLIFF_VERSION}/git-cliff" /usr/local/bin
      - name: Extract version
        id: extract_version
        run: |
          package_version=$(git-cliff --bumped-version)
          change_log=$(git-cliff --unreleased --tag "$package_version")
          echo "::info::Extracted release version git commits, version $package_version"
          echo "release_version=$package_version" >> "$GITHUB_OUTPUT"
          echo "change_log<<EOF" >> $GITHUB_OUTPUT
          echo "${change_log}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Check new tag
        id: check_tag
        shell: bash
        run: |
          set +e
          echo "::info::Checking if ${{ steps.extract_version.outputs.release_version }} exists"
          git ls-remote --exit-code --tags origin "${{ steps.extract_version.outputs.release_version }}"
          if [[ $? -eq 0 ]]; then
            echo "is_new_release=false" >> "$GITHUB_OUTPUT"
          else
            echo "is_new_release=true" >> "$GITHUB_OUTPUT"
          fi

  build:
    runs-on: ubuntu-latest
    needs: [check_version]
    name: Build
    if: ${{ needs.check_version.outputs.is_new_release }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-x86_64
      - name: Install system deps
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libgtk-3-dev libjavascriptcoregtk-4.1-dev libwebkit2gtk-4.1-dev libsoup-3.0-dev
          version: 1.0
      - name: Build
        env:
          CI_VERSION: ${{ needs.check_version.outputs.release_version }}
        run: cargo build --release
      - name: Rename artifacts
        run: |
          mkdir -p target/artifacts
          mv target/release/auth-rs "target/artifacts/auth-rs-linux-x86_64"
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: auth-rs-linux-x86_64
          path: "target/artifacts/auth-rs-linux-x86_64"
    
  release:
    runs-on: ubuntu-latest
    needs: [build, check_version]
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts
          pattern: auth-rs-*
          merge-multiple: true
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.check_version.outputs.release_version }}
          name: Release ${{ needs.check_version.outputs.release_version }}
          body: ${{ needs.check_version.outputs.change_log }}
          files: |
            release-artifacts/auth-rs-*

