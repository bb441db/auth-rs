name: Release

on:
  push:
    branches: ["main"]
    tags: ["v*"]

jobs:
  image:
    name: builder
    runs-on: "ubuntu-latest"
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # tag v4.3.0
        with:
          persist-credentials: false

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set source variables
        run: |
          repo_name=$(echo "${GITHUB_REPOSITORY,,}" | sed 's|\.|_|g')
          git_ref_name=$(echo "${GITHUB_REF_NAME,,}" | sed 's|[^a-z0-9_-]|_|g')
          echo "REPO_NAME=${repo_name}" >> "${GITHUB_ENV}"
          echo "GIT_REF_NAME=${git_ref_name}" >> "${GITHUB_ENV}"

      - name: Build Image
        id: build-image
        env:
          SOURCE_DATE_EPOCH: 0
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: build/builder.Dockerfile
          tags: builder
          labels: org.opencontainers.image.source=https://github.com/${{ env.REPO_NAME }}
          # Cache from/to the current branch of the current repo as the primary cache key.
          # Cache from the default branch of the current repo so branches can have cache hits.
          # Ignore errors on cache writes so CI of forks works without a valid GHCR config.
          cache-from: |
            type=registry,ref=ghcr.io/${{ env.REPO_NAME }}:builder-${{ env.GIT_REF_NAME }}
            type=registry,ref=ghcr.io/${{ env.REPO_NAME }}:builder-main
          cache-to: |
            type=registry,ref=ghcr.io/${{ env.REPO_NAME }}:builder-${{ env.GIT_REF_NAME }},ignore-error=true
          outputs: |
            type=docker,dest=build/builder.tar

      - name: Compress Image
        run: |
          touch -t 197001010000 build/builder.tar
          zstd -v -T0 -6 --rm build/builder.tar
          touch -t 197001010000 build/builder.tar.zst

      - name: Upload Docker Image
        uses: actions/upload-artifact@v4
        with:
          name: builder-image
          path: build/builder.tar.zst
          compression-level: '0'

  build:
    needs: [ "image" ]
    # Permissions used for actions/attest-build-provenance
    permissions:
      id-token: write
      attestations: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # tag v4.3.0
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Download image
        uses: actions/download-artifact@v4
        with:
          name: builder-image
          path: build

      - name: Load image
        run: |
          zstd -d --rm build/builder.tar.zst
          docker load --input build/builder.tar

      - name: Build auth-rs
        run: |
          ./build/build-in-container.bash

      - name: Generate attestations
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: auth-rs
          path: dist/*

  release:
    if: github.ref_type == 'tag'
    needs: [ "build" ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      # Permissions used for actions/attest-build-provenance
      id-token: write
      attestations: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          name: auth-rs

      - name: Generate attestations
        id: attestations
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: dist/*

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body: |
            Attestation URL: ${{ steps.attestations.outputs.attestation-url }}
          files: dist/*
          generate_release_notes: true
